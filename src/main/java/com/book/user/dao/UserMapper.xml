<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.book.user.dao.UserMapper" >
  <resultMap id="BaseResultMap" type="com.book.user.entity.User" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user" property="user" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="BIT" />
    <result column="createtime" property="createtime" jdbcType="TIMESTAMP" />
    <result column="updatetime" property="updatetime" jdbcType="TIMESTAMP" />
    <result column="department" property="department" jdbcType="VARCHAR" />
    <collection property="roleList" resultMap="RoleResult"/>
  </resultMap>
  <resultMap id="RoleResult" type="com.book.user.entity.Role" >
    <id column="roleid" property="roleid" jdbcType="INTEGER" />
    <result column="role" property="role" jdbcType="VARCHAR" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <collection property="permissionList" resultMap="PermissionResultMap"/>
  </resultMap>
  <resultMap id="PermissionResultMap" type="com.book.user.entity.Permission" >
    <id column="permissionid" property="permissionid" jdbcType="INTEGER" />
    <result column="permission" property="permission" jdbcType="VARCHAR" />
    <result column="description" property="description" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, user, password, username, state, createtime, updatetime, department
  </sql>
  <sql id="Role_Column_List" >
    roleid, role, r.description
  </sql>
  <sql id="Permission_Column_List" >
    permissionid, permission, p.description
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
  select
  <include refid="Base_Column_List" />
  from user
  where id = #{id,jdbcType=INTEGER}
</select>
  <select id="selectByPrimaryKeySelective" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    u.username , u.user , u.id , u.createtime , u.department
    from user u
    where u.id = #{user_id}
    and u.state = 1
  </select>
  <select id="countByCondition" resultType="int">
    select
    count(0)
    from user u
    where u.state = true
      <if test="username != null">
        and u.username = #{username}
      </if>
      <if test="department != null">
        and u.department like '%${department}%'
      </if>
  </select>
  <select id="selectUserPage" resultMap="BaseResultMap">
    select
    id, user, username, department
    from user u
    where u.state = true
      <if test="username != null">
        and u.username = #{username}
      </if>
      <if test="department != null">
        and u.department like '%${department}%'
      </if>
    limit #{startRow} , #{pageSize}
  </select>
  <select id="selectiveByUsername" resultMap="BaseResultMap">
    select
        id, user, username, department
    from user
    where user = #{username}
  </select>
  <select id="selectByUsernameId" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user u
    where u.user = #{user}
    and id != #{id}
  </select>
  <select id="selectByUsername" resultMap="BaseResultMap">
  select
  <include refid="Base_Column_List" />
  from user u
  where u.user = #{username}
</select>
  <select id="selectByRealname" resultMap="BaseResultMap">
    select
    u.id , u.user, u.username, u.department ,r.roleid, r.role,p.permissionid, p.permission
    from user u
    left join user_role ur on u.id = ur.user_id
    left join role r on ur.role_id = r.roleid
    left join role_permission rp on ur.role_id = rp.role_id
    left join permission p on rp.permission_id = p.permissionid
    where u.username = #{realname}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.book.user.entity.User" >
    insert into user (id, user, password, 
      username, state, createtime, 
      updatetime, department)
    values (#{id,jdbcType=INTEGER}, #{user,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{username,jdbcType=VARCHAR}, #{state,jdbcType=BIT}, #{createtime,jdbcType=TIMESTAMP}, 
      #{updatetime,jdbcType=TIMESTAMP}, #{department,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.book.user.entity.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="user != null" >
        user,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="createtime != null" >
        createtime,
      </if>
      <if test="updatetime != null" >
        updatetime,
      </if>
      <if test="department != null" >
        department,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="user != null" >
        #{user,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=BIT},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null" >
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="department != null" >
        #{department,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.book.user.entity.User" >
    update user
    <set >
      <if test="user != null" >
        user = #{user,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=BIT},
      </if>
      <if test="createtime != null" >
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null" >
        updatetime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="department != null" >
        department = #{department,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.book.user.entity.User" >
    update user
    set user = #{user,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      state = #{state,jdbcType=BIT},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      updatetime = #{updatetime,jdbcType=TIMESTAMP},
      department = #{department,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>