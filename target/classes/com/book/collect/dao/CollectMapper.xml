<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.book.collect.dao.CollectMapper" >
  <resultMap id="BaseResultMap" type="com.book.collect.entity.Collect" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="book_id" property="bookId" jdbcType="INTEGER" />
    <result column="collecttime" property="collecttime" jdbcType="TIMESTAMP" />
    <result column="state" property="state" jdbcType="TINYINT" />
    <association property="bookinfo" resultMap="BookResultMap"/>
  </resultMap>
  <resultMap id="BookResultMap" type="com.book.book.entity.Book" >
    <id column="b.id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="code" property="code" jdbcType="VARCHAR" />
    <result column="owner" property="owner" jdbcType="INTEGER" />
    <result column="createtime" property="createtime" jdbcType="DATE" />
    <result column="updatetime" property="updatetime" jdbcType="TIMESTAMP" />
    <result column="state" property="state" jdbcType="BIT" />
    <result column="location" property="location" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    uc.id, user_id, book_id, collecttime, uc.state
  </sql>
  <sql id="Book_Column_List" >
    b.id, name, code, owner, createtime, updatetime, b.state, location, type
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    uc.id, user_id, book_id, collecttime, uc.state , name, code,  createtime, updatetime, b.state, location, type
    from user_collect_record
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectCollectByUserIdBookIdState" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user_collect_record uc
    where uc.user_id = #{userId}
    and uc.book_id = #{bookId}
    and uc.state = 1
  </select>
  <select id="selectCollectRecordById" resultMap="BaseResultMap">
    select
    uc.id, user_id, book_id , b.name, b.code, b.location, b.type
    from user_collect_record uc
    left join book b on b.id = uc.book_id
    where uc.user_id = #{id}
    and uc.state = 1
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user_collect_record
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.book.collect.entity.Collect" >
    insert into user_collect_record (id, user_id, book_id, 
      collecttime, state)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{bookId,jdbcType=INTEGER}, 
      #{collecttime,jdbcType=TIMESTAMP}, #{state,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="com.book.collect.entity.Collect" >
    insert into user_collect_record
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="bookId != null" >
        book_id,
      </if>
      <if test="collecttime != null" >
        collecttime,
      </if>
      <if test="state != null" >
        state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="bookId != null" >
        #{bookId,jdbcType=INTEGER},
      </if>
      <if test="collecttime != null" >
        #{collecttime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        #{state,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.book.collect.entity.Collect" >
    update user_collect_record
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="bookId != null" >
        book_id = #{bookId,jdbcType=INTEGER},
      </if>
      <if test="collecttime != null" >
        collecttime = #{collecttime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.book.collect.entity.Collect" >
    update user_collect_record
    set user_id = #{userId,jdbcType=INTEGER},
      book_id = #{bookId,jdbcType=INTEGER},
      collecttime = #{collecttime,jdbcType=TIMESTAMP},
      state = #{state,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>